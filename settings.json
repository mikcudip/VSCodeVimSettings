{
  "editor.formatOnSave": false,
  "indentRainbow.lightIndicatorStyleLineWidth": 1,
  "indentRainbow.indicatorStyle": "light",
  "indentRainbow.colors": [
    "rgba(255,255,64, 0.2)",
    "rgba(127,255,127, 0.2)",
    "rgba(255,127,255, 0.2)",
    "rgba(79,236,236, 0.2)"
  ],
  "editor.fontFamily": "'JetBrains Mono Medium', 'Hurmit Nerd Font Mono', 'Droid Sans Mono', 'monospace'",
  "terminal.integrated.fontFamily": "'JetBrains Mono Medium', 'Hurmit Nerd Font Mono', 'Droid Sans Mono', 'monospace'",
  "workbench.sideBar.location": "right",
  "workbench.tree.renderIndentGuides": "none",
  "catppuccin-icons.hidesExplorerArrows": true,
  "workbench.colorCustomizations": {
    // colors here
  },
  "explorer.confirmDelete": false,
  "explorer.compactFolders": false,
  "workbench.tips.enabled": false,
  "workbench.statusBar.visible": false,
  "explorer.confirmDragAndDrop": false,
  "workbench.layoutControl.enabled": false,
  "workbench.startupEditor": "none",
  "window.menuBarVisibility": "toggle",
  "workbench.editor.showTabs": "single",
  "workbench.activityBar.location": "hidden",
  "window.customTitleBarVisibility": "never",
  "workbench.activityBar.iconClickBehavior": "toggle",
  // telemetry
  "redhat.telemetry.enabled": false,
  // JAVA development
  // Rute generated by command: "readlink -f (which java) | cut -d '/' -f -4"
  // "java.jdt.ls.java.home": "/nix/store/y9dcp2rgh70wz2q3nybv45k8zaz3jdwa-openjdk-21.0.3+9/lib/openjdk/",
  // editor
  "editor.tabSize": 2,
  "editor.fontSize": 14,
  "editor.lineHeight": 0,
  "window.zoomLevel": -1,
  "editor.cursorSurroundingLines": 15,
  "editor.scrollbar.verticalScrollbarSize": 4,
  "editor.scrollbar.horizontalScrollbarSize": 4,
  "editor.fontLigatures": true,
  "editor.hover.enabled": false,
  "editor.detectIndentation": false,
  "editor.guides.indentation": false,
  "editor.overviewRulerBorder": false,
  "editor.hideCursorInOverviewRuler": false,
  "editor.matchBrackets": "never",
  "editor.cursorBlinking": "solid",
  "editor.lineNumbers": "on",
  "editor.renderWhitespace": "none",
  "editor.lightbulb.enabled": "off",
  "editor.renderLineHighlight": "none",
  "editor.showFoldingControls": "never",
  "editor.scrollbar.vertical": "hidden",
  "editor.scrollbar.horizontal": "hidden",
  "editor.cursorSmoothCaretAnimation": "on",
  // terminal
  "terminal.integrated.tabs.enabled": false,
  "terminal.integrated.lineHeight": 0,
  "terminal.integrated.fontSize": 13,
  // window
  "window.titleBarStyle": "native",
  "window.commandCenter": false,
  "emmet.includeLanguages": {
    "jsp": "html"
  },
  "files.associations": {
    "*.jsp": "html"
  },
  "editor.tabCompletion": "on",
  "editor.tabFocusMode": false,
  "editor.minimap.enabled": false,
  "yaml.format.enable": true,
  "notebook.formatOnSave.enabled": true,
  "workbench.editor.closeEmptyGroups": true,
  "workbench.editor.revealIfOpen": false,
  "git.openRepositoryInParentFolders": "always",
  "git.enabled": true,
  "git.path": null,
  "git.autofetch": false,
  "symbols.hidesExplorerArrows": false,
  "editor.glyphMargin": false,
  "security.workspace.trust.enabled": false,
  "notebook.cellToolbarLocation": {
    "default": "right",
    "jupyter-notebook": "left"
  },
  // Notebook
  "notebook.output.scrolling": true,
  // Drawio
  "hediet.vscode-drawio.resizeImages": false,
  "hediet.vscode-drawio.theme": "kennedy",
  "hediet.vscode-drawio.customColorSchemes": [
    [
      {
        "title": "Color 1",
        "fill": "none",
        "stroke": "#bf616a",
        "font": "#eceff4",
        //"gradient": "#0000ff",
      },
      {
        "title": "Color 2",
        "fill": "none",
        "stroke": "#a3be8c",
        "font": "#eceff4",
      },
      {
        "title": "Color 3",
        "fill": "none",
        "stroke": "#ebcb8b",
        "font": "#eceff4",
      },
      {
        "title": "Color 4",
        "fill": "none",
        "stroke": "#81a1c1",
        "font": "#eceff4",
      },
      {
        "title": "Color 5",
        "fill": "none",
        "stroke": "#b48ead",
        "font": "#eceff4",
      },
      {
        "title": "Color 6",
        "fill": "none",
        "stroke": "#88c0d0",
        "font": "#eceff4",
      },
      {
        "title": "Color 7",
        "fill": "none",
        "stroke": "#e5e9f0",
        "font": "#eceff4",
      },
      {
        "title": "Color 1",
        "fill": "#bf616a",
        "stroke": "none",
        "font": "#2e3440",
      },
      {
        "title": "Color 2",
        "fill": "#a3be8c",
        "stroke": "none",
        "font": "#2e3440",
      },
      {
        "title": "Color 3",
        "fill": "#ebcb8b",
        "stroke": "none",
        "font": "#2e3440",
      },
      {
        "title": "Color 4",
        "fill": "#81a1c1",
        "stroke": "none",
        "font": "#2e3440",
      },
      {
        "title": "Color 5",
        "fill": "#b48ead",
        "stroke": "none",
        "font": "#2e3440",
      },
      {
        "title": "Color 6",
        "fill": "#88c0d0",
        "stroke": "none",
        "font": "#2e3440",
      },
      {
        "title": "Color 7",
        "fill": "#e5e9f0",
        "stroke": "none",
        "font": "#2e3440",
      }
    ]
  ],
  "hediet.vscode-drawio.defaultEdgeStyle": {
    "strokeColor": "#81a1c1", // Color del trazo
    "strokeWidth": 2, // Ancho del trazo
    "strokeStyle": "solid", // Estilo del trazo: "solid", "dashed", etc.
    "edgeStyle": "orthogonalEdgeStyle",
  },
  "hediet.vscode-drawio.defaultVertexStyle": {
    "fillColor": "none", // Color de relleno
    "strokeColor": "#81a1c1", // Color del borde
    "strokeWidth": 2, // Ancho del borde
    "fontColor": "#000000", // Color del texto
    "fontSize": 12 // Tama√±o de la fuente
  },
  "hediet.vscode-drawio.colorNames": {
    "primary": "#3498db",
    "secondary": "#2ecc71",
    "danger": "#e74c3c",
    "warning": "#f39c12",
    "info": "#1abc9c"
  },
  "C_Cpp.clang_format_fallbackStyle": "{ BasedOnStyle: Google, IndentWidth: 2, ColumnLimit: 0}",
  "[java]": {
    "editor.defaultFormatter": "redhat.java"
  },
  "sync.gist": "b67fd10b547584b7be7b7acee89db3db",
  "workbench.colorTheme": "Nord",
  "liveServer.settings.donotShowInfoMsg": true,
  // vim
  // General Vim settings
  "vim.leader": "<space>",
  "vim.useSystemClipboard": true,
  "vim.useCtrlKeys": true,
  // Search-related settings
  "vim.incsearch": true,
  "vim.hlsearch": true,
  // EasyMotion settings
  "vim.easymotion": true,
  // Extensions & Experimental settings
  "extensions.experimental.affinity": {
    "vscodevim.vim": 1
  },
  "vim.insertModeKeyBindingsNonRecursive": [
    // Vim Shortcuts
    {
      "before": [
        "j",
        "k"
      ],
      "after": [
        "<Esc>"
      ]
    }
  ],
  "vim.visualModeKeyBindingsNonRecursive": [
    // Vim Shortcuts
    {
      "before": [
        "<Leader>",
        "l"
      ],
      "after": [
        "$"
      ]
    },
    {
      "before": [
        "<Leader>",
        "h"
      ],
      "after": [
        "^"
      ]
    },
    {
      "before": [
        "J"
      ],
      "after": [
        "5",
        "j"
      ]
    },
    {
      "before": [
        "K"
      ],
      "after": [
        "5",
        "k"
      ]
    },
    // VSCode Shortcuts
    {
      "before": [
        "<Leader>",
        "a"
      ],
      "commands": [
        "editor.action.quickFix"
      ]
    },
    {
      "before": [
        "<Leader>",
        "s"
      ],
      "commands": [
        "workbench.action.toggleSidebarVisibility"
      ]
    },
    {
      "before": [
        "<Leader>",
        "d"
      ],
      "commands": [
        "editor.action.duplicateSelection"
      ]
    },
    {
      "before": [
        "<Leader>",
        "f"
      ],
      "commands": [
        "editor.action.formatSelection"
      ]
    },
    {
      "before": [
        "<Leader>",
        "u"
      ],
      "commands": [
        "editor.action.transformToTitlecase"
      ]
    },
    {
      "before": [
        "<Leader>",
        "i"
      ],
      "commands": [
        "workbench.action.toggleEditorWidths"
      ]
    },
    {
      "before": [
        "<Leader>",
        "o"
      ],
      "commands": [
        "workbench.action.quickOpen"
      ]
    },
    {
      "before": [
        "<Leader>",
        "p"
      ],
      "commands": [
        "workbench.action.showCommands"
      ]
    },
    {
      "before": [
        "<C-j>"
      ],
      "commands": [
        "editor.action.moveLinesDownAction"
      ]
    },
    {
      "before": [
        "<C-k>"
      ],
      "commands": [
        "editor.action.moveLinesUpAction"
      ]
    },
    // Emmet
    {
      "before": [
        "<Leader>",
        "e",
        "b",
        "i"
      ],
      "commands": [
        "editor.emmet.action.balanceIn"
      ]
    },
    {
      "before": [
        "<Leader>",
        "e",
        "b",
        "o"
      ],
      "commands": [
        "editor.emmet.action.balanceOut"
      ]
    },
    {
      "before": [
        "<Leader>",
        "e",
        "t"
      ],
      "commands": [
        "editor.emmet.action.matchTag"
      ]
    },
    {
      "before": [
        "<Leader>",
        "e",
        "c"
      ],
      "commands": [
        "editor.emmet.action.toggleComment"
      ]
    },
    {
      "before": [
        "<Leader>",
        "e",
        "n"
      ],
      "commands": [
        "editor.emmet.action.selectNextItem"
      ]
    },
    {
      "before": [
        "<Leader>",
        "e",
        "N"
      ],
      "commands": [
        "editor.emmet.action.selectPrevItem"
      ]
    },
    {
      "before": [
        "<Leader>",
        "e",
        "x"
      ],
      "commands": [
        "editor.emmet.action.evaluateMathExpression"
      ]
    },
    {
      "before": [
        "<Leader>",
        "e",
        "w"
      ],
      "commands": [
        "editor.emmet.action.wrapIndividualLinesWithAbbreviation"
      ]
    },
    // Git
    {
      "before": [
        "<Leader>",
        "g",
        "s"
      ],
      "commands": [
        "git.stageSelectedRanges"
      ]
    },
    {
      "before": [
        "<Leader>",
        "g",
        "u"
      ],
      "commands": [
        "git.unstageSelectedRanges"
      ]
    },
    {
      "before": [
        "<Leader>",
        "g",
        "r"
      ],
      "commands": [
        "git.revertSelectedRanges"
      ]
    },
    {
      "before": [
        "leader",
        "m",
        "c",
        "a"
      ],
      "commands": [
        "merge-conflict.accept.selection"
      ]
    }
  ],
  "vim.normalModeKeyBindingsNonRecursive": [
    // Vim Shortcuts
    {
      "before": [
        "J"
      ],
      "after": [
        "5",
        "j"
      ]
    },
    {
      "before": [
        "K"
      ],
      "after": [
        "5",
        "k"
      ]
    },
    {
      "before": [
        "<Leader>",
        "l"
      ],
      "after": [
        "$"
      ]
    },
    {
      "before": [
        "<Leader>",
        "h"
      ],
      "after": [
        "^"
      ]
    },
    {
      "before": [
        "<C-n>"
      ],
      "commands": [
        ":nohl"
      ]
    },
    {
      "before": [
        "<C-h>"
      ],
      "after": [
        "<C-w>",
        "h"
      ]
    },
    {
      "before": [
        "<C-j>"
      ],
      "after": [
        "<C-w>",
        "j"
      ]
    },
    {
      "before": [
        "<C-k>"
      ],
      "after": [
        "<C-w>",
        "k"
      ]
    },
    {
      "before": [
        "<C-l>"
      ],
      "after": [
        "<C-w>",
        "l"
      ]
    },
    // VSCode Shortcuts
    {
      "before": [
        "<Leader>",
        "e",
        "f"
      ],
      "commands": [
        "workbench.explorer.fileView.focus"
      ]
    },
    {
      "before": [
        "<Leader>",
        "a"
      ],
      "commands": [
        "editor.action.quickFix"
      ]
    },
    {
      "before": [
        "<Leader>",
        "s",
        "s"
      ],
      "commands": [
        "workbench.action.toggleSidebarVisibility"
      ]
    },
    {
      "before": [
        "<Leader>",
        "d",
        "s"
      ],
      "commands": [
        "editor.action.duplicateSelection"
      ]
    },
    {
      "before": [
        "<Leader>",
        "f",
        "d"
      ],
      "commands": [
        "editor.action.formatDocument"
      ]
    },
    {
      "before": [
        "<Leader>",
        "q"
      ],
      "commands": [
        "workbench.action.closeActiveEditor"
      ]
    },
    {
      "before": [
        "<Leader>",
        "w"
      ],
      "commands": [
        "workbench.action.files.save"
      ]
    },
    {
      "before": [
        "<Leader>",
        "r",
        "s"
      ],
      "commands": [
        "editor.action.rename"
      ]
    },
    {
      "before": [
        "<Leader>",
        "t",
        "s"
      ],
      "commands": [
        "workbench.action.gotoSymbol"
      ]
    },
    {
      "before": [
        "<Leader>",
        "u"
      ],
      "commands": [
        "editor.action.transformToTitlecase"
      ]
    },
    {
      "before": [
        "<Leader>",
        "i"
      ],
      "commands": [
        "workbench.action.toggleEditorWidths"
      ]
    },
    {
      "before": [
        "<Leader>",
        "o"
      ],
      "commands": [
        "workbench.action.quickOpen"
      ]
    },
    {
      "before": [
        "<Leader>",
        "p"
      ],
      "commands": [
        "workbench.action.showCommands"
      ]
    },
    {
      "before": [
        "<Leader>",
        "m",
        "n"
      ],
      "commands": [
        "editor.action.marker.next"
      ]
    },
    {
      "before": [
        "<Leader>",
        "m",
        "N"
      ],
      "commands": [
        "editor.action.marker.prev"
      ]
    },
    {
      "before": [
        "<Leader>",
        "t",
        "r"
      ],
      "commands": [
        "workbench.action.tasks.reRunTask"
      ]
    },
    {
      "before": [
        "<Leader>",
        "t",
        "c"
      ],
      "commands": [
        "workbench.action.tasks.configureTaskRunner"
      ]
    },
    {
      "before": [
        "<Leader>",
        "n",
        "h"
      ],
      "commands": [
        "notifications.hideList"
      ]
    },
    {
      "before": [
        "<Leader>",
        "n",
        "c"
      ],
      "commands": [
        "notifications.clearAll"
      ]
    },
    {
      "before": [
        "<Leader>",
        "n",
        "f"
      ],
      "commands": [
        "notifications.focusToasts"
      ]
    },
    {
      "before": [
        "<Leader>",
        "n",
        "s"
      ],
      "commands": [
        "notifications.showList"
      ]
    },
    {
      "before": [
        "<Leader>",
        "g",
        "l"
      ],
      "commands": [
        "workbench.action.gotoLine"
      ]
    },
    {
      "before": [
        "<Leader>",
        "f",
        "b"
      ],
      "commands": [
        "breadcrumbs.focusAndSelect"
      ]
    },
    {
      "before": [
        "<Leader>",
        "t",
        "w"
      ],
      "commands": [
        "editor.action.toggleWordWrap"
      ]
    },
    // View Commands
    {
      "before": [
        "<Leader>",
        "v",
        "i",
        "i"
      ],
      "commands": [
        "workbench.action.increaseViewSize"
      ]
    },
    {
      "before": [
        "<Leader>",
        "v",
        "d",
        "d"
      ],
      "commands": [
        "workbench.action.decreaseViewSize"
      ]
    },
    {
      "before": [
        "<Leader>",
        "v",
        "i",
        "h"
      ],
      "commands": [
        "workbench.action.increaseViewHeight"
      ]
    },
    {
      "before": [
        "<Leader>",
        "v",
        "d",
        "h"
      ],
      "commands": [
        "workbench.action.decreaseViewHeight"
      ]
    },
    {
      "before": [
        "<Leader>",
        "v",
        "i",
        "w"
      ],
      "commands": [
        "workbench.action.increaseViewWidth"
      ]
    },
    {
      "before": [
        "<Leader>",
        "v",
        "d",
        "w"
      ],
      "commands": [
        "workbench.action.decreaseViewWidth"
      ]
    },
    {
      "before": [
        "<Leader>",
        "t",
        "t"
      ],
      "commands": [
        "workbench.action.files.newUntitledFile"
      ]
    },
    {
      "before": [
        "<Leader>",
        "t",
        "n"
      ],
      "commands": [
        "workbench.action.nextEditor"
      ]
    },
    {
      "before": [
        "<Leader>",
        "t",
        "N"
      ],
      "commands": [
        "workbench.action.previousEditor"
      ]
    },
    {
      "before": [
        "<Leader>",
        "v",
        "g",
        "j"
      ],
      "commands": [
        "workbench.action.moveActiveEditorGroupDown"
      ]
    },
    {
      "before": [
        "<Leader>",
        "v",
        "g",
        "h"
      ],
      "commands": [
        "workbench.action.moveActiveEditorGroupLeft"
      ]
    },
    {
      "before": [
        "<Leader>",
        "v",
        "g",
        "l"
      ],
      "commands": [
        "workbench.action.moveActiveEditorGroupRight"
      ]
    },
    {
      "before": [
        "<Leader>",
        "v",
        "g",
        "k"
      ],
      "commands": [
        "workbench.action.moveActiveEditorGroupUp"
      ]
    },
    {
      "before": [
        "<Leader>",
        "v",
        "i",
        "f"
      ],
      "commands": [
        "workbench.action.moveEditorToFirstGroup"
      ]
    },
    {
      "before": [
        "<Leader>",
        "v",
        "i",
        "l"
      ],
      "commands": [
        "workbench.action.moveEditorToLastGroup"
      ]
    },
    {
      "before": [
        "<Leader>",
        "v",
        "i",
        "n"
      ],
      "commands": [
        "workbench.action.moveEditorToNextGroup"
      ]
    },
    {
      "before": [
        "<Leader>",
        "v",
        "i",
        "p"
      ],
      "commands": [
        "workbench.action.moveEditorToPreviousGroup"
      ]
    },
    {
      "before": [
        "<Leader>",
        "v",
        "e",
        "h"
      ],
      "commands": [
        "workbench.action.moveEditorLeftInGroup"
      ]
    },
    {
      "before": [
        "<Leader>",
        "v",
        "e",
        "l"
      ],
      "commands": [
        "workbench.action.moveEditorRightInGroup"
      ]
    },
    {
      "before": [
        "<Leader>",
        "c",
        "e",
        "g"
      ],
      "commands": [
        "workbench.action.closeEditorsAndGroup"
      ]
    },
    {
      "before": [
        "<Leader>",
        "c",
        "o",
        "e"
      ],
      "commands": [
        "workbench.action.closeOtherEditors"
      ]
    },
    {
      "before": [
        "<Leader>",
        "c",
        "e",
        "o"
      ],
      "commands": [
        "workbench.action.closeEditorsInOtherGroups"
      ]
    },
    {
      "before": [
        "<Leader>",
        "s",
        "h"
      ],
      "commands": [
        "workbench.action.splitEditorLeft"
      ]
    },
    {
      "before": [
        "<Leader>",
        "s",
        "j"
      ],
      "commands": [
        "workbench.action.splitEditorDown"
      ]
    },
    {
      "before": [
        "<Leader>",
        "s",
        "k"
      ],
      "commands": [
        "workbench.action.splitEditorUp"
      ]
    },
    {
      "before": [
        "<Leader>",
        "s",
        "l"
      ],
      "commands": [
        "workbench.action.splitEditorRight"
      ]
    },
    // Emmet Commands
    {
      "before": [
        "<Leader>",
        "e",
        "i",
        "0"
      ],
      "commands": [
        "editor.emmet.action.incrementNumberByOneTenth"
      ]
    },
    {
      "before": [
        "<Leader>",
        "e",
        "d",
        "0"
      ],
      "commands": [
        "editor.emmet.action.decrementNumberByOneTenth"
      ]
    },
    {
      "before": [
        "<Leader>",
        "e",
        "i",
        "u"
      ],
      "commands": [
        "editor.emmet.action.incrementNumberByOne"
      ]
    },
    {
      "before": [
        "<Leader>",
        "e",
        "d",
        "u"
      ],
      "commands": [
        "editor.emmet.action.decrementNumberByOne"
      ]
    },
    {
      "before": [
        "<Leader>",
        "e",
        "i",
        "d"
      ],
      "commands": [
        "editor.emmet.action.incrementNumberByTen"
      ]
    },
    {
      "before": [
        "<Leader>",
        "e",
        "d",
        "d"
      ],
      "commands": [
        "editor.emmet.action.decrementNumberByTen"
      ]
    },
    {
      "before": [
        "<Leader>",
        "e",
        "t"
      ],
      "commands": [
        "editor.emmet.action.matchTag"
      ]
    },
    {
      "before": [
        "<Leader>",
        "e",
        "n"
      ],
      "commands": [
        "editor.emmet.action.nextEditPoint"
      ]
    },
    {
      "before": [
        "<Leader>",
        "e",
        "N"
      ],
      "commands": [
        "editor.emmet.action.prevEditPoint"
      ]
    },
    {
      "before": [
        "<Leader>",
        "e",
        "x"
      ],
      "commands": [
        "editor.emmet.action.evaluateMathExpression"
      ]
    },
    {
      "before": [
        "<Leader>",
        "e",
        "m",
        "l"
      ],
      "commands": [
        "editor.emmet.action.mergeLines"
      ]
    },
    {
      "before": [
        "<Leader>",
        "e",
        "u",
        "t"
      ],
      "commands": [
        "editor.emmet.action.updateTag"
      ]
    },
    {
      "before": [
        "<Leader>",
        "e",
        "r",
        "t"
      ],
      "commands": [
        "editor.emmet.action.removeTag"
      ]
    },
    {
      "before": [
        "<Leader>",
        "e",
        "s",
        "j"
      ],
      "commands": [
        "editor.emmet.action.splitJoinTag"
      ]
    },
    {
      "before": [
        "<Leader>",
        "e",
        "u",
        "i"
      ],
      "commands": [
        "editor.emmet.action.updateImageSize"
      ]
    },
    {
      "before": [
        "<Leader>",
        "e",
        "c"
      ],
      "commands": [
        "editor.emmet.action.toggleComment"
      ]
    },
    {
      "before": [
        "<Leader>",
        "e",
        "r",
        "c"
      ],
      "commands": [
        "editor.emmet.action.reflectCSSValue"
      ]
    },
    {
      "before": [
        "<Leader>",
        "e",
        "w"
      ],
      "commands": [
        "editor.emmet.action.wrapWithAbbreviation"
      ]
    },
    // Git Commands
    {
      "before": [
        "leader",
        "g",
        "g"
      ],
      "commands": [
        "workbench.scm.focus"
      ]
    },
    {
      "before": [
        "leader",
        "g",
        "t",
        "l"
      ],
      "commands": [
        "timeline.focus"
      ]
    },
    {
      "before": [
        "leader",
        "g",
        "i",
        "r"
      ],
      "commands": [
        "git.init"
      ]
    },
    {
      "before": [
        "leader",
        "g",
        "a",
        "i"
      ],
      "commands": [
        "git.ignore"
      ]
    },
    {
      "before": [
        "leader",
        "g",
        "p",
        "g"
      ],
      "commands": [
        "github.publish"
      ]
    },
    {
      "before": [
        "leader",
        "g",
        "a",
        "r"
      ],
      "commands": [
        "git.addRemote"
      ]
    },
    {
      "before": [
        "leader",
        "g",
        "r",
        "r"
      ],
      "commands": [
        "git.removeRemote"
      ]
    },
    {
      "before": [
        "leader",
        "g",
        "s",
        "c"
      ],
      "commands": [
        "git.stage"
      ]
    },
    {
      "before": [
        "leader",
        "g",
        "s",
        "a",
        "c"
      ],
      "commands": [
        "git.stageAll"
      ]
    },
    {
      "before": [
        "leader",
        "g",
        "s",
        "a",
        "m"
      ],
      "commands": [
        "git.stageAllMerge"
      ]
    },
    {
      "before": [
        "leader",
        "g",
        "s",
        "a",
        "t"
      ],
      "commands": [
        "git.stageAllTracked"
      ]
    },
    {
      "before": [
        "leader",
        "g",
        "s",
        "a",
        "t"
      ],
      "commands": [
        "git.stageAllUntracked"
      ]
    },
    {
      "before": [
        "leader",
        "g",
        "u",
        "c"
      ],
      "commands": [
        "git.unstage"
      ]
    },
    {
      "before": [
        "leader",
        "g",
        "u",
        "a",
        "c"
      ],
      "commands": [
        "git.unstageAll"
      ]
    },
    {
      "before": [
        "leader",
        "g",
        "c",
        "m"
      ],
      "commands": [
        "git.commit"
      ]
    },
    {
      "before": [
        "leader",
        "g",
        "c",
        "a"
      ],
      "commands": [
        "git.commitAll"
      ]
    },
    {
      "before": [
        "leader",
        "g",
        "c",
        "s"
      ],
      "commands": [
        "git.commitStaged"
      ]
    },
    {
      "before": [
        "leader",
        "g",
        "c",
        "e"
      ],
      "commands": [
        "git.commitEmpty"
      ]
    },
    {
      "before": [
        "leader",
        "g",
        "u",
        "l",
        "c"
      ],
      "commands": [
        "git.undoCommit"
      ]
    },
    {
      "before": [
        "leader",
        "g",
        "p",
        "h"
      ],
      "commands": [
        "git.push"
      ]
    },
    {
      "before": [
        "leader",
        "g",
        "p",
        "f"
      ],
      "commands": [
        "git.pushForce"
      ]
    },
    {
      "before": [
        "leader",
        "g",
        "p",
        "b",
        "t"
      ],
      "commands": [
        "git.pushTo"
      ]
    },
    {
      "before": [
        "leader",
        "g",
        "p",
        "b",
        "t",
        "f"
      ],
      "commands": [
        "git.pushToForce"
      ]
    },
    {
      "before": [
        "leader",
        "g",
        "p",
        "l"
      ],
      "commands": [
        "git.pull"
      ]
    },
    {
      "before": [
        "leader",
        "g",
        "P",
        "f"
      ],
      "commands": [
        "git.pullFrom"
      ]
    },
    {
      "before": [
        "leader",
        "g",
        "P",
        "r"
      ],
      "commands": [
        "git.pullRebase"
      ]
    },
    {
      "before": [
        "leader",
        "g",
        "A",
        "r"
      ],
      "commands": [
        "git.rebaseAbort"
      ]
    },
    {
      "before": [
        "leader",
        "g",
        "c",
        "b"
      ],
      "commands": [
        "git.branch"
      ]
    },
    {
      "before": [
        "leader",
        "g",
        "c",
        "b",
        "f"
      ],
      "commands": [
        "git.branchFrom"
      ]
    },
    {
      "before": [
        "leader",
        "g",
        "d",
        "b"
      ],
      "commands": [
        "git.deleteBranch"
      ]
    },
    {
      "before": [
        "leader",
        "g",
        "m",
        "b"
      ],
      "commands": [
        "git.merge"
      ]
    },
    {
      "before": [
        "leader",
        "g",
        "p",
        "b"
      ],
      "commands": [
        "git.publish"
      ]
    },
    {
      "before": [
        "leader",
        "g",
        "r",
        "b"
      ],
      "commands": [
        "git.renameBranch"
      ]
    },
    {
      "before": [
        "leader",
        "g",
        "R",
        "b"
      ],
      "commands": [
        "git.rebase"
      ]
    },
    {
      "before": [
        "leader",
        "g",
        "C"
      ],
      "commands": [
        "git.checkout"
      ]
    },
    {
      "before": [
        "leader",
        "g",
        "C",
        "d"
      ],
      "commands": [
        "git.checkoutDetached"
      ]
    },
    {
      "before": [
        "leader",
        "g",
        "c",
        "p"
      ],
      "commands": [
        "git.cherryPick"
      ]
    },
    {
      "before": [
        "leader",
        "g",
        "d",
        "c"
      ],
      "commands": [
        "git.clean"
      ]
    },
    {
      "before": [
        "leader",
        "g",
        "d",
        "a",
        "c"
      ],
      "commands": [
        "git.cleanAll"
      ]
    },
    {
      "before": [
        "leader",
        "g",
        "d",
        "a",
        "t"
      ],
      "commands": [
        "git.cleanAllTracked"
      ]
    },
    {
      "before": [
        "leader",
        "g",
        "d",
        "a",
        "u"
      ],
      "commands": [
        "git.cleanAllUntracked"
      ]
    },
    {
      "before": [
        "leader",
        "g",
        "s",
        "s"
      ],
      "commands": [
        "git.stash"
      ]
    },
    {
      "before": [
        "leader",
        "g",
        "s",
        "i",
        "u"
      ],
      "commands": [
        "git.stashIncludeUntracked"
      ]
    },
    {
      "before": [
        "leader",
        "g",
        "a",
        "s"
      ],
      "commands": [
        "git.stashApply"
      ]
    },
    {
      "before": [
        "leader",
        "g",
        "a",
        "l",
        "s"
      ],
      "commands": [
        "git.stashApplyLatest"
      ]
    },
    {
      "before": [
        "leader",
        "g",
        "d",
        "s"
      ],
      "commands": [
        "git.stashDrop"
      ]
    },
    {
      "before": [
        "leader",
        "g",
        "p",
        "s"
      ],
      "commands": [
        "git.stashPop"
      ]
    },
    {
      "before": [
        "leader",
        "g",
        "p",
        "l",
        "s"
      ],
      "commands": [
        "git.stashPopLatest"
      ]
    },
    {
      "before": [
        "leader",
        "g",
        "c",
        "t"
      ],
      "commands": [
        "git.createTag"
      ]
    },
    {
      "before": [
        "leader",
        "g",
        "d",
        "t"
      ],
      "commands": [
        "git.deleteTag"
      ]
    },
    {
      "before": [
        "leader",
        "g",
        "p",
        "t"
      ],
      "commands": [
        "git.pushTags"
      ]
    },
    {
      "before": [
        "leader",
        "g",
        "f",
        "f"
      ],
      "commands": [
        "git.fetch"
      ]
    },
    {
      "before": [
        "leader",
        "g",
        "f",
        "p"
      ],
      "commands": [
        "git.fetchPrune"
      ]
    },
    {
      "before": [
        "leader",
        "g",
        "f",
        "f",
        "a",
        "r"
      ],
      "commands": [
        "git.fetchAll"
      ]
    },
    {
      "before": [
        "leader",
        "g",
        "o",
        "c"
      ],
      "commands": [
        "git.openChange"
      ]
    },
    {
      "before": [
        "leader",
        "g",
        "o",
        "f"
      ],
      "commands": [
        "git.openFile"
      ]
    },
    {
      "before": [
        "leader",
        "g",
        "s",
        "n"
      ],
      "commands": [
        "editor.action.dirtydiff.next"
      ]
    },
    {
      "before": [
        "leader",
        "g",
        "s",
        "N"
      ],
      "commands": [
        "editor.action.dirtydiff.previous"
      ]
    },
    {
      "before": [
        "leader",
        "g",
        "m",
        "n"
      ],
      "commands": [
        "workbench.action.editor.nextChange"
      ]
    },
    {
      "before": [
        "leader",
        "g",
        "m",
        "N"
      ],
      "commands": [
        "workbench.action.editor.previousChange"
      ]
    },
    {
      "before": [
        "leader",
        "g",
        "c",
        "n"
      ],
      "commands": [
        "workbench.action.compareEditor.nextChange"
      ]
    },
    {
      "before": [
        "leader",
        "g",
        "c",
        "N"
      ],
      "commands": [
        "workbench.action.compareEditor.previousChange"
      ]
    },
    {
      "before": [
        "leader",
        "g",
        "i",
        "v"
      ],
      "commands": [
        "toggle.diff.renderSideBySide"
      ]
    },
    {
      "before": [
        "leader",
        "m",
        "c",
        "b"
      ],
      "commands": [
        "merge-conflict.accept.both"
      ]
    },
    {
      "before": [
        "leader",
        "m",
        "c",
        "c"
      ],
      "commands": [
        "merge-conflict.accept.current"
      ]
    },
    {
      "before": [
        "leader",
        "m",
        "c",
        "i"
      ],
      "commands": [
        "merge-conflict.accept.incoming"
      ]
    },
    {
      "before": [
        "leader",
        "m",
        "c",
        "a",
        "b"
      ],
      "commands": [
        "merge-conflict.accept.all-both"
      ]
    },
    {
      "before": [
        "leader",
        "m",
        "c",
        "a",
        "c"
      ],
      "commands": [
        "merge-conflict.accept.all-current"
      ]
    },
    {
      "before": [
        "leader",
        "m",
        "c",
        "a",
        "i"
      ],
      "commands": [
        "merge-conflict.accept.all-incoming"
      ]
    },
    {
      "before": [
        "leader",
        "m",
        "c",
        "o"
      ],
      "commands": [
        "merge-conflict.compare"
      ]
    },
    {
      "before": [
        "leader",
        "m",
        "c",
        "n"
      ],
      "commands": [
        "merge-conflict.next"
      ]
    },
    {
      "before": [
        "leader",
        "m",
        "c",
        "N"
      ],
      "commands": [
        "merge-conflict.previous"
      ]
    },
    // Debug Commands
    {
      "before": [
        "<Leader>",
        "d",
        "f"
      ],
      "commands": [
        "workbench.view.debug"
      ]
    },
    {
      "before": [
        "<Leader>",
        "d",
        "c"
      ],
      "commands": [
        "workbench.action.debug.continue"
      ]
    },
    {
      "before": [
        "<Leader>",
        "d",
        "p"
      ],
      "commands": [
        "workbench.action.debug.pause"
      ]
    },
    {
      "before": [
        "<Leader>",
        "d",
        "r"
      ],
      "commands": [
        "workbench.action.debug.restart"
      ]
    },
    {
      "before": [
        "<Leader>",
        "d",
        "h"
      ],
      "commands": [
        "editor.debug.action.showDebugHover"
      ]
    },
    {
      "before": [
        "<Leader>",
        "d",
        "s"
      ],
      "commands": [
        "workbench.action.debug.start"
      ]
    },
    {
      "before": [
        "<Leader>",
        "d",
        "i"
      ],
      "commands": [
        "workbench.action.debug.stepInto"
      ]
    },
    {
      "before": [
        "<Leader>",
        "d",
        "u"
      ],
      "commands": [
        "workbench.action.debug.stepOut"
      ]
    },
    {
      "before": [
        "<Leader>",
        "d",
        "o"
      ],
      "commands": [
        "workbench.action.debug.stepOver"
      ]
    },
    {
      "before": [
        "<Leader>",
        "d",
        "b"
      ],
      "commands": [
        "editor.debug.action.toggleBreakpoint"
      ]
    },
    {
      "before": [
        "<Leader>",
        "d",
        "x"
      ],
      "commands": [
        "workbench.action.debug.stop"
      ]
    },
    {
      "before": [
        "<Leader>",
        "d",
        "a",
        "l"
      ],
      "commands": [
        "editor.debug.action.addLogPoint"
      ]
    },
    {
      "before": [
        "<Leader>",
        "d",
        "a",
        "f"
      ],
      "commands": [
        "workbench.debug.viewlet.action.addFunctionBreakpointAction"
      ]
    },
    {
      "before": [
        "<Leader>",
        "d",
        "a",
        "c"
      ],
      "commands": [
        "editor.debug.action.conditionalBreakpoint"
      ]
    },
    {
      "before": [
        "<Leader>",
        "d",
        "a",
        "i"
      ],
      "commands": [
        "editor.debug.action.toggleInlineBreakpoint"
      ]
    },
    {
      "before": [
        "<Leader>",
        "d",
        "e",
        "b"
      ],
      "commands": [
        "workbench.debug.viewlet.action.enableAllBreakpoints"
      ]
    },
    {
      "before": [
        "<Leader>",
        "d",
        "d",
        "b"
      ],
      "commands": [
        "workbench.debug.viewlet.action.disableAllBreakpoints"
      ]
    },
    {
      "before": [
        "<Leader>",
        "d",
        "r",
        "b"
      ],
      "commands": [
        "workbench.debug.viewlet.action.removeAllBreakpoints"
      ]
    },
    {
      "before": [
        "<Leader>",
        "d",
        "n"
      ],
      "commands": [
        "editor.debug.action.goToNextBreakpoint"
      ]
    },
    {
      "before": [
        "<Leader>",
        "d",
        "N"
      ],
      "commands": [
        "editor.debug.action.goToPreviousBreakpoint"
      ]
    }
  ],
}